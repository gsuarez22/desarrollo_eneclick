/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dominio.ComponentesLista;
import dominio.archivo;
import dominio.pdf;
import dominio.producto;
import java.awt.Dimension;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author sistemas
 */
public class frmABMProductos extends javax.swing.JFrame {

    /**
     * Creates new form frmABMProductos
     */
    public frmABMProductos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducto = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        chkPeso = new javax.swing.JCheckBox();
        cmdGuardar = new javax.swing.JButton();
        cmdReset = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        txtBarra = new javax.swing.JTextField();
        txtPrecioU = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        cmbFamilia = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        lblUrl = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblFoto = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtProductos = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        tblProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProducto);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 180, 610, 310);

        jLabel1.setText("ID:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 30, 20);

        lblID.setText("0");
        getContentPane().add(lblID);
        lblID.setBounds(40, 10, 40, 20);

        jLabel3.setText("BARRA");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 140, 50, 20);

        jLabel4.setText("CODIGO");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(200, 140, 60, 20);

        jLabel5.setText("PRODUCTO");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 40, 70, 20);

        jLabel6.setText("PRECIO U");
        jLabel6.setToolTipText("");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(200, 90, 60, 20);

        chkPeso.setText("PESO");
        getContentPane().add(chkPeso);
        chkPeso.setBounds(190, 40, 70, 40);

        cmdGuardar.setBackground(new java.awt.Color(255, 51, 51));
        cmdGuardar.setText("GUARDAR");
        cmdGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(cmdGuardar);
        cmdGuardar.setBounds(150, 10, 90, 23);

        cmdReset.setBackground(new java.awt.Color(153, 153, 255));
        cmdReset.setText("RESET");
        cmdReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdResetActionPerformed(evt);
            }
        });
        getContentPane().add(cmdReset);
        cmdReset.setBounds(250, 10, 80, 23);
        getContentPane().add(txtCodigo);
        txtCodigo.setBounds(260, 140, 70, 20);
        getContentPane().add(txtBarra);
        txtBarra.setBounds(60, 140, 120, 20);

        txtPrecioU.setText("0");
        txtPrecioU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioUKeyReleased(evt);
            }
        });
        getContentPane().add(txtPrecioU);
        txtPrecioU.setBounds(200, 110, 60, 20);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 170, 540, 10);

        jLabel7.setText("FAMILIA POST");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(270, 40, 130, 20);

        cmbFamilia.setEditable(true);
        cmbFamilia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cmbFamilia);
        cmbFamilia.setBounds(270, 60, 160, 20);

        jLabel2.setText("IMAGEN:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(340, 140, 60, 20);

        lblUrl.setText("jLabel8");
        getContentPane().add(lblUrl);
        lblUrl.setBounds(310, 140, 0, 20);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(400, 140, 30, 20);

        lblFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(lblFoto);
        lblFoto.setBounds(440, 10, 180, 150);

        jLabel9.setText("PRECIO FINAL");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(270, 90, 80, 20);

        jLabel10.setText("CANTIDAD U");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(360, 90, 70, 20);

        txtPrecio.setText("0");
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioKeyReleased(evt);
            }
        });
        getContentPane().add(txtPrecio);
        txtPrecio.setBounds(270, 110, 70, 20);

        txtCantidad.setText("0");
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantidadKeyReleased(evt);
            }
        });
        getContentPane().add(txtCantidad);
        txtCantidad.setBounds(360, 110, 70, 20);

        jButton2.setBackground(new java.awt.Color(0, 255, 102));
        jButton2.setText("MAILING");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(340, 10, 90, 23);

        txtProductos.setColumns(20);
        txtProductos.setRows(5);
        txtProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txtProductos);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 60, 170, 60);

        jButton3.setBackground(new java.awt.Color(255, 51, 51));
        jButton3.setText("-");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(560, 160, 60, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdResetActionPerformed
        // TODO add your handling code here:
        reset();
        
    }//GEN-LAST:event_cmdResetActionPerformed

    private void tblProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductoMouseClicked
        // TODO add your handling code here:
        String id = tblProducto.getModel().getValueAt(tblProducto.getSelectedRow() , 0).toString();
        producto p = new producto();
        p.cargarPorId(id);
        lblID.setText(p.id);
        txtBarra.setText(p.barra);
        txtCodigo.setText(p.codigo);
        txtCantidad.setText(p.cantidadunitaria);
        txtPrecio.setText(p.precio);
        txtProductos.setText(p.nombre);
        cmbFamilia.setSelectedItem(p.familia);
        lblUrl.setText(p.url);
        origen = lblUrl.getText();        
        if (p.peso.equals("1")){  chkPeso.setSelected(true);  }else{  chkPeso.setSelected(false);  }  
        calcularPrecio("final");
        adosarFoto(p.url);
    }//GEN-LAST:event_tblProductoMouseClicked

    private void adosarFoto(String foto)
    {
        if(foto == null)
        {
            foto = "C:/Javier/no_image.jpg";
        }
        Image unI = new ImageIcon (foto).getImage();
        ImageIcon unII = new ImageIcon(unI.getScaledInstance(180, 150, Image.SCALE_SMOOTH));
        lblFoto.setIcon(unII);
    }
    
    private void validarArchivo()
    {
        if(origen.equals(destino) == false)
        {
            
            lblUrl.setText(destino);
            if(archivo.guardarArchivo(origen, destino).equals("OK") == false)
            {   
                lblUrl.setText("");
            }
            else
            {
                producto p = new producto();
                p.cargarPorId(lblID.getText());

                if(p.url != null)
                {
                    if (p.url.length() > 10)
                    {
                        String val = p.url.substring(0,18);
                        if(val.toLowerCase().equals("c:/javier/adjuntos"))
                        {
                            archivo.eliminarArchivoDirectorio(new File(p.url));
                        }
                    }
                }
            }
            
        }
    }
    
    private void cmdGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarActionPerformed
        // TODO add your handling code here:
        producto p = new producto();
        p.id = lblID.getText();
        p.barra = txtBarra.getText();
        p.codigo = txtCodigo.getText();
        p.cantidadunitaria = txtCantidad.getText();
        SimpleDateFormat unS = new SimpleDateFormat("yyyyMMddHHmmss");
        destino = lblUrl.getText();
        validarArchivo();        
        p.url = lblUrl.getText().replace("\\", "/");
        p.precio = txtPrecio.getText();
        if(p.precio.equals("")){p.precio = "0";}
        p.nombre = txtProductos.getText();
        if (chkPeso.isSelected()){  p.peso = "1";  }else{  p.peso = "0";  }
        try{p.familia = cmbFamilia.getSelectedItem().toString();}catch(Exception ex){}
        p.guardar();
        reset();
        //QUITAR CUANDO ESTE OPERATIVO 
        //unC.cargarCombo("select distinct (nombre) from productos order by nombre", cmbProductos);

    }//GEN-LAST:event_cmdGuardarActionPerformed

    private void txtPrecioUKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioUKeyReleased
        // TODO add your handling code here:
      
        calcularPrecio("unitario");
        
    }//GEN-LAST:event_txtPrecioUKeyReleased

    private void txtPrecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyReleased
        // TODO add your handling code here:
        calcularPrecio("final");
    }//GEN-LAST:event_txtPrecioKeyReleased

    private void txtCantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyReleased
        // TODO add your handling code here:
        calcularPrecio("unitario");
    }//GEN-LAST:event_txtCantidadKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        frmSelectorA unA = new frmSelectorA();
        unA.abrir(this);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        pdf unP = new pdf();
        SimpleDateFormat unF = new SimpleDateFormat("yyyy-MM-dd");
        String nombre = "mailing" + unF.format(new Date()) + ".pdf";
        String desktopPath = System.getProperty("user.home") + "/Desktop/";
        nombre = desktopPath + nombre;
        unP.armarMailing(tblProducto, nombre);
        String ruta = nombre;
        try {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + ruta);
        } catch (IOException ex) {
            Logger.getLogger(frmABMProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtProductosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductosKeyReleased
        // TODO add your handling code here:
        ComponentesLista unC = new ComponentesLista();
        unC.cargarTabla("Select ID, NOMBRE, PRECIO, cantidadunitaria as UNIDADES from Productos where nombre like '%" + txtProductos.getText() + "%' order by nombre", tblProducto);
        
    }//GEN-LAST:event_txtProductosKeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
       try
       {
           String id = tblProducto.getValueAt(tblProducto.getSelectedRow(), 0).toString();
           producto p = new producto();
           p.borrar(id);
           reset();
       }
       catch(Exception ex)
       {
           
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void calcularPrecio(String v)
    {
        if (Integer.parseInt(txtCantidad.getText()) > 0)
        {
            if(v.equals("unitario"))
            {
                if (Double.parseDouble(txtPrecioU.getText()) > 0)
                {
                    double precio = Double.parseDouble(txtPrecioU.getText()) * Integer.parseInt(txtCantidad.getText());
                    txtPrecio.setText(String.valueOf(Math.round(precio)));
                }
                else
                {
                    if (Double.parseDouble(txtPrecio.getText()) > 0)
                    {
                        double precio = Double.parseDouble(txtPrecio.getText()) / Integer.parseInt(txtCantidad.getText());
                        txtPrecioU.setText(String.valueOf(Math.round(precio)));
                    }
                }
            }            
            if (v.equals("final"))
            {
                if (Double.parseDouble(txtPrecio.getText()) > 0)
                {
                    double precio = Double.parseDouble(txtPrecio.getText()) / Integer.parseInt(txtCantidad.getText());
                    txtPrecioU.setText(String.valueOf(Math.round(precio)));
                }
                else
                {
                    if (Double.parseDouble(txtPrecioU.getText()) > 0)
                    {
                        double precio = Double.parseDouble(txtPrecioU.getText()) * Integer.parseInt(txtCantidad.getText());
                        txtPrecio.setText(String.valueOf(Math.round(precio)));
                    }
                }
            }
        }
    }
    
    private ComponentesLista unC = new ComponentesLista();
   
    public void reset()
    {
        lblID.setText("0");
        txtBarra.setText("");
        txtCodigo.setText("");
        txtPrecio.setText("0");
        chkPeso.setSelected(false);
        txtProductos.setText("");
        txtCantidad.setText("0");
        txtPrecioU.setText("0");
        txtPrecio.setText("0");
        adosarFoto("C:/javier/no_image.jpg");
        unC.cargarTabla("select id, codigo, barra, nombre, peso, precio from productos order by nombre", tblProducto);
    }

    public void abrir()
    {
        this.setVisible(true);
        this.setTitle("MANTENIMIENTO PRODUCTOS - ALMACEN");
        this.setMinimumSize(new Dimension(650, 550)); 
        this.setLocation(700, 130);
        reset();
        //Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/eme.png"));
        //this.setIconImage(icon);       
         //QUITAR CUANDO ESTE OPERATIVO 
        unC.cargarCombo("select distinct (familia) as familia from productos order by familia", cmbFamilia);
        lblUrl.setVisible(false);
    }
    
    private String origen = "";
    private String destino = "";
    
    public void completarArchivo(String rutaAbsoluta, String nombreArchivo)
    {
        SimpleDateFormat unS = new SimpleDateFormat("yyyyMMddHHmmss");
        origen = rutaAbsoluta +  nombreArchivo; 
        destino = "C:\\Javier\\Adjuntos\\" +  unS.format(new Date()) + nombreArchivo;
        lblUrl.setText(destino);
        adosarFoto(origen);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkPeso;
    private javax.swing.JComboBox cmbFamilia;
    private javax.swing.JButton cmdGuardar;
    private javax.swing.JButton cmdReset;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblUrl;
    private javax.swing.JTable tblProducto;
    private javax.swing.JTextField txtBarra;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtPrecioU;
    private javax.swing.JTextArea txtProductos;
    // End of variables declaration//GEN-END:variables
}
